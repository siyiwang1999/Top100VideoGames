#COMM5501 A3
setwd('/Users/wangsahyeok/Desktop/VideoGame')

# 1. Region Sales
# North America, Europe, Japan and Other Sales of Top 100 Video Games (in millions)

install.packages("ggplot2")
library(ggplot2)
install.packages("plotly")
library(plotly)
install.packages("data.table")
library(data.table)

data.file<-"/Users/wangsahyeok/Desktop/VideoGame/vgsales.csv"
fread(data.file)->info

salesCols<-c('Rank','Name',grep('_Sales$',names(info),value=T))
top100<-info[order(-Global_Sales)][1:100,..salesCols][,!'Global_Sales']
top100<-melt(top100,id.vars=c('Rank','Name'),variable.name='where',value.name='sales')
top100[,Region:=fcase(where=='NA_Sales','North America',where=='EU_Sales','Europe',where=='JP_Sales','Japan',default='Other')]

top100[,label:=
paste(paste0('<b>Rank</b>',': ',Rank),
paste0('<b>Name</b>',': ',Name),
paste0('<b>',Region,' Sales</b>',': ',sales),
sep="<br>")]

top100<-highlight_key(top100, ~Region, 'Select Region:')

pp<-ggplot(top100, aes(x = Rank,y = sales,colour = Region,group = Region,text = label))+
geom_line()+
  theme_bw() %+replace% theme(legend.position='bottom')+
  scale_x_continuous(expand = expansion(0.01),breaks = seq(10, 100, by = 10))+
  labs(y = 'Sales')

ggplotly(pp, tooltip = 'label', width = 800) %>% 
  highlight(dynamic = F, selectize = T, opacityDim = 0.2) %>%
  layout(legend = list(orientation = "h",x = 0.5,xanchor = "center",y = -0.2),
               title = list(text = '<b> North America, Europe, Japan and Other Sales of Top 100 Video Games (in millions) <b>', x = 0.5, xref = 'paper', font = list(size = 15)))


# 2. Release Year
# Release Years of Top 100 Video Games
plot2.data<-info[order(-Global_Sales)][1:100,.(Rank,Year,Name,Global_Sales)]
plot2.data[,rank10:=cut(Rank,breaks=c(0,seq(10,100,by=10)))]
plot2.data[,rank10.size:=1/as.integer(rank10)]
plot2.data[,Year:=as.integer(Year)]

plot2.data[,label:=paste0('<b><i>',Name,'</i></b><br>',
'<b>Rank: </b>',Rank,'<br>',
'<b>Year: </b>',Year,'<br>',
'<b>Global_Sales: </b>$',Global_Sales,'<br>')]

plot2<-ggplot(plot2.data,aes(x = Rank,y = Year,size = rank10.size, colour = Global_Sales, text = label))+
  geom_vline(xintercept = seq(10, 100, by = 10),colour = '#3B3131', lty = 4)+
  geom_point(shape = 20)+
  theme_bw()+
  scale_x_continuous(breaks = seq(10, 100, by = 10))+
  scale_size_continuous(guide = 'none')+
  scale_colour_viridis_c(begin = 0.5,option = 'C',direction = -1)+
  scale_y_continuous(breaks = seq(1980, 2015, by = 5))+
  theme(plot.title = element_text(hjust = 0.5))

ggplotly(plot2, tooltip = 'text',width = 900) %>% 
layout(title = list(text = '<b> Release Years of Top 100 Video Games <b>', font = list(size = 15)))


# 3. Genre Related
install.packages("scales")
library(scales)
install.packages("RColorBrewer")
library(RColorBrewer)

plot3.data<-info[order(-Global_Sales)][1:100,.(Rank,Genre,Global_Sales)]

# Genre Distribution
plot31.data<-plot3.data[,.(Number=.N),Genre][order(-Number)]
plot31.data[,Genre:=ordered(Genre,Genre)]

plot31<-ggplot(plot31.data, aes(x = Genre,y = Number, fill = Genre))+
  geom_bar(stat = 'identity')+
  theme_bw() %+replace% theme(axis.text.x = element_text(angle = 45,hjust = 1,vjust = 1))+
  scale_fill_manual(values = setNames(brewer.pal(11, 'Set3'), plot31.data$Genre))+
  labs(title = 'Genre Distribution of Top 100 Video Games')+
  geom_text(aes(label = Number),vjust = 0, nudge_y = 0.6)+
  theme(plot.title = element_text(hjust = 0.5))

plot31<-ggplotly(plot31,tooltip = c('x','y'), width = 800) %>% 
  layout(title = list(text = '<b> Genre Distribution of Top 100 Video Games <b>', font = list(size = 15)))

plot31

# Genre Sales
plot32.data<-plot3.data[,.(Global_Sales=sum(Global_Sales)),Genre][order(-Global_Sales)]
plot32.data[,texthover:=
paste(paste0("<b>Genre</b>",": ",Genre),
paste0("<b>Sales</b>",": $",Global_Sales),
paste0("<b>% Sales</b>",": ",percent(Global_Sales/sum(Global_Sales))),
sep='<br>')]

plot32 <- plot_ly(plot32.data, labels = ~Genre, values = ~Global_Sales, text = ~texthover,
hoverinfo = 'text', textinfo = 'label',
marker = list(colors = brewer.pal(nrow(plot31.data), 'Set3')),
type = 'pie',width = 800)

plot32 <- plot32 %>% layout(title = list(text = '<b>Genre Sales of Top 100 Video Games (in millions)<b>',xref = 'paper',x = 0.5),
                            xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
                            yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
                            legend = list(orientation = "h", x = 0.5, xanchor = "center",y = -0.2)
)

plot32

# 4. Publisher
plot4.data<-info[order(-Global_Sales)][1:100,.(Rank,Publisher,Global_Sales)]

plot41.data<-plot4.data[,.(Number=.N),by=Publisher][order(-Number)]
plot41.data[,Publisher:=ordered(Publisher,rev(Publisher))]

plot41<-ggplot(plot41.data,aes(x=Number,y=Publisher,fill=Publisher))+
  theme_bw()+
  geom_bar(stat = 'identity',show.legend = F)+
  scale_x_continuous(expand = expansion(c(0, 0.05)))+
  labs(x = 'Number of Games',y = 'Publisher', title = 'Numbers of Top 100 Video Games Publishers')+
  scale_fill_viridis_d(direction = -1,option = 'C')+
  geom_text(aes(label = Number),hjust = 0,nudge_x = 0.8)+
  theme(plot.title = element_text(hjust = 0.5))

ggplotly(plot41,tooltip = c('x','fill'),width = 900) %>% 
  hide_legend() %>% 
  layout(title = list(text = '<b> Numbers of Top 100 Video Games Publishers <b>',font = list(size = 15)))

# 5. Platform Related
install.packages("shiny")
library(shiny)
install.packages("shinydashboard")
library(shinydashboard)

plot5<-info[order(-Global_Sales)][1:100,.(Rank,Global_Sales,Platform)]
plot5.count<-plot5[, .N, Platform][order(-N)]
plot5[,Platform:=ordered(Platform,levels = rev(plot5.count$Platform))]
plot5.count[, Platform:=ordered(Platform, rev(Platform))]
names(plot5.count)[2]<-'Number of Games'

# Platform
plot51 <- ggplot(plot5, aes(x = Rank,y = Platform, size = Global_Sales))+
  geom_point(show.legend=F, colour = '#3B3131', fill = '#8FBC8F', shape = 21)+
  scale_x_continuous(breaks = seq(10, 100, by = 10))+
  theme_bw()+
  scale_size_continuous(range = c(1, 5))+
  labs(title = 'Platform of Top 100 Video Games Release')+
  theme(plot.title = element_text(hjust = 0.5))

plot51 <- ggplotly(plot51, width=600) %>%
  layout(title = list(text = '<b> Platform of Top 100 Video Games Release <b>', font = list(size = 15)))

plot51


# Number
plot52<-ggplot(plot5.count,aes(y = Platform,x = `Number of Games`))+
  theme_bw()+
  geom_bar(stat = 'identity',fill = '#E9967A')+
  scale_x_continuous(expand = expansion(c(0, 0.02)))+
  scale_y_discrete(position = 'right')+
  labs(y='', title = 'Numbers of Top 100 Video Games Platforms')+
  geom_text(aes(label = `Number of Games`),hjust = 0, nudge_x = 0.6, size = 3)+
  theme(plot.title = element_text(hjust = 0.5))

plot52 <- ggplotly(plot52, width = 600) %>%
  layout(title = list(text = '<b> Numbers of Top 100 Video Games Platforms <b>', font = list(size = 15)))

plot52


# Pie
plot53.data<-info[order(-Global_Sales)][1:100,.(Platform,Global_Sales)]
plot53.data<-plot53.data[,.(sales=sum(Global_Sales)),by=Platform]

plot53.data[,hovertext:=paste(
  paste0('<b>Platform</b>',": ",Platform),
  paste0('<b>Sales</b>',": $",sales),
  sep="<br>")]

plot_ly(data = plot53.data,ids = ~Platform,labels = ~Platform,
        values = ~sales,parents='World Top 100',
        type ='sunburst',branchvalues = 'total',text = ~hovertext,
        textinfo = 'text', hoverinfo = 'text') %>% layout(title = '<b> Sales of Top 100 Video Games Platforms (in millions) <b>')

